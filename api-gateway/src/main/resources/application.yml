server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: api-gateway
  security:
    basic:
      enabled: false
    filter:
      order: 1
  cloud:
    config:
      enabled: false
    discovery:
      enabled: true
      client:
        composite-indicator:
          enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Core Services
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**,/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                key-resolver: "#{@userKeyResolver}"

        - id: auth-service
          uri: lb://user-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=0
            - PreserveHostHeader

        # Business Services
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
          filters:
            - StripPrefix=1

        - id: analytics-service
          uri: lb://analytics-service
          predicates:
            - Path=/analytics/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: analyticsServiceCircuitBreaker

        - id: llm-service
          uri: lb://llm-service
          predicates:
            - Path=/ai/**
          metadata:
            connect-timeout: 120000
            response-timeout: 120000
          filters:
            - name: CircuitBreaker
              args:
                name: llmServiceCircuitBreaker
            - name: RewritePath
              args:
                regexp: "/ai/(?<segment>.*)"
                replacement: "/${segment}"
            - AddRequestHeader=Content-Type, application/json
            - AddRequestHeader=Accept, text/event-stream
            - PreserveHostHeader
            - name: RequestSize # LLM istekleri için özel boyut limiti
              args:
                maxSize: 50MB

        - id: image-service
          uri: lb://image-service
          predicates:
            - Path=/images/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: imageServiceCircuitBreaker

        - id: credit-service
          uri: lb://credit-service
          predicates:
            - Path=/credits/**
          filters:
            - name: CircuitBreaker
              args:
                name: creditServiceCircuitBreaker

        - id: subscription-service
          uri: lb://subscription-service
          predicates:
            - Path=/subscriptions/**,/subscription-plans/**,/payments/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: subscriptionServiceCircuitBreaker

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/notifications/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: notificationServiceCircuitBreaker

        - id: redis-service
          uri: lb://redis-service
          predicates:
            - Path=/cache/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: redisServiceCircuitBreaker

      default-filters:
        - AddRequestHeader=X-Forwarded-Prefix, /
        - name: Retry
          args:
            retries: 3
            methods: GET,POST,PUT,DELETE,OPTIONS
            series: SERVER_ERROR
            exceptions:
              - java.io.IOException
              - java.util.concurrent.TimeoutException
        - name: RequestSize
          args:
            maxSize: 10MB
        # Response time header'ını kaldır, global filter olarak ekleyelim

  data:            name: X-Response-Time
    redis:     value: ${request.duration:0}ms
      host: ${REDIS_HOST:redis}DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:13579ada}

  httpclient:      host: ${REDIS_HOST:redis}
    connect-timeout: 30000{REDIS_PORT:6379}
    response-timeout: 30000SSWORD:13579ada}
    pool:
      max-idle-time: 15sent:
      max-connections: 100000
      type: ELASTIC
      metrics: true
      acquire-timeout: 60000: 15s
  loadbalancer:
    cache:STIC
      enabled: trueics: true
      caffeine:ut: 60000
        spec: maximumSize=500,expireAfterWrite=5s
  jackson:
    deserialization:led: true
      UNWRAP_ROOT_VALUE: true
      FAIL_ON_UNKNOWN_PROPERTIES: false,expireAfterWrite=5s
      ACCEPT_SINGLE_VALUE_AS_ARRAY: true
    serialization:
      WRAP_ROOT_VALUE: trueVALUE: true
      FAIL_ON_EMPTY_BEANS: falseRTIES: false
    mapper:AY: true
      ACCEPT_CASE_INSENSITIVE_PROPERTIES: truezation:
      DEFAULT_VIEW_INCLUSION: true

eureka:    mapper:
  instance:CCEPT_CASE_INSENSITIVE_PROPERTIES: true
    prefer-ip-address: falseLT_VIEW_INCLUSION: true
    hostname: ${HOSTNAME:api-gateway}
    instance-id: ${spring.application.name}:${random.uuid}
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    metadata-map:
      zone: primary${spring.application.name}:${random.uuid}
      profile: ${spring.profiles.active:prod}nterval-in-seconds: 10
      management.context-path: ${server.servlet.context-path:/actuator}
  client:
    service-url:e: primary
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://craftpilot:${EUREKA_PASSWORD:13579ada}@eureka-server:8761/eureka/}{spring.profiles.active:prod}
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 5
    should-enforce-registration-at-init: trueVICE_URL_DEFAULTZONE:http://craftpilot:${EUREKA_PASSWORD:13579ada}@eureka-server:8761/eureka/}
    enabled: true
    use-dns-for-fetching-service-urls: false-eureka: true
    availability-zones:
      default: defaultZonestration-at-init: true

management:    use-dns-for-fetching-service-urls: false
  endpoints:ility-zones:
    web:t: defaultZone
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: alwaysure:
      probes:
        enabled: true
      group:
        readiness:etails: always
          include: ping,redis,diskSpace # db yerine redis ekledik
        liveness:
          include: ping
  health:
    circuitbreakers: include: ping,redis,diskSpace # db yerine redis ekledik
      enabled: true
    livenessstate:ping
      enabled: true
    readinessstate::
      enabled: true
    redis:
      enabled: true # Redis health check'i aktif edildiled: true
    diskspace:
      enabled: true true
    validate-group-membership: true
check'i aktif edildi
  metrics:    diskspace:
    tags:led: true
      application: ${spring.application.name}ate-group-membership: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:ation.name}
        http.server.requests: 10ms,50ms,100ms,200ms,500msbution:
    enable:
      all: truep.server.requests: true

logging:        http.server.requests: 10ms,50ms,100ms,200ms,500ms
  pattern:le:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId}/%X{spanId}] %-5level %logger{36} - %msg%n" true
  level:
    root: INFO
    com.craftpilot.apigateway: DEBUG
    org.springframework.cloud.gateway: INFO.SSS} [%thread] [%X{traceId}/%X{spanId}] %-5level %logger{36} - %msg%n"
    org.springframework.cloud.netflix.eureka: ${LOG_LEVEL:INFO}
    com.netflix.discovery: ${LOG_LEVEL:INFO}
    com.craftpilot.apigateway.security: ${SECURITY_LOG_LEVEL:INFO}
    org.springframework.security: INFO
    reactor.netty.http.client: INFOeureka: ${LOG_LEVEL:INFO}
VEL:INFO}
resilience4j:    com.craftpilot.apigateway.security: ${SECURITY_LOG_LEVEL:INFO}
  circuitbreaker:gframework.security: INFO
    configs:.http.client: INFO
      default:
        slidingWindowType: TIME_BASED
        slidingWindowSize: 60
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 30s
        failureRateThreshold: 50D
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 100
    instances:
      llmServiceCircuitBreaker:tedNumberOfCallsInHalfOpenState: 3
        baseConfig: defaultOpenToHalfOpenEnabled: true
        slidingWindowSize: 30Size: 100
        waitDurationInOpenState: 20s
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
        allowHealthIndicatorToFail: true
      userServiceCircuitBreaker:
        baseConfig: defaultHalfOpenState: 3
ator: true
  timelimiter:        allowHealthIndicatorToFail: true
    configs:iceCircuitBreaker:
      default:Config: default
        timeoutDuration: 5s
        cancelRunningFuture: true
    instances:
      userServiceTimeLimiter:
        timeoutDuration: 2s
      llmServiceTimeLimiter:: true
        timeoutDuration: 30s
:
# Tracing Configuration        timeoutDuration: 2s
spring.sleuth:iter:
  sampler:tDuration: 30s
    probability: 1.0
  baggage:ion
    correlation-enabled: trueuth:
    remote-fields: x-request-id
    local-fields: country-code,user-id
    remote-fields: x-request-id
    local-fields: country-code,user-id
