server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      routes:
        # Core Services
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**,/api/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/user

        # Business Services
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/api/admin/**,/api/management/**
          filters:
            - name: CircuitBreaker
              args:
                name: adminServiceCircuitBreaker

        - id: analytics-service
          uri: lb://analytics-service
          predicates:
            - Path=/api/analytics/**,/api/reports/**,/api/metrics/**
          filters:
            - name: CircuitBreaker
              args:
                name: analyticsServiceCircuitBreaker

        - id: llm-service
          uri: lb://llm-service
          predicates:
            - Path=/api/questions/**,/api/chat/**,/api/completions/**
          filters:
            - name: CircuitBreaker
              args:
                name: llmServiceCircuitBreaker

        - id: image-service
          uri: lb://image-service
          predicates:
            - Path=/api/images/**,/api/media/**
          filters:
            - name: CircuitBreaker
              args:
                name: imageServiceCircuitBreaker

        - id: credit-service
          uri: lb://credit-service
          predicates:
            - Path=/api/credits/**,/api/payments/**,/api/billing/**
          filters:
            - name: CircuitBreaker
              args:
                name: creditServiceCircuitBreaker

        - id: subscription-service
          uri: lb://subscription-service
          predicates:
            - Path=/api/subscriptions/**,/api/plans/**
          filters:
            - name: CircuitBreaker
              args:
                name: subscriptionServiceCircuitBreaker

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**,/api/messages/**
          filters:
            - name: CircuitBreaker
              args:
                name: notificationServiceCircuitBreaker

        # Swagger UI Routes
        - id: swagger-ui
          uri: lb://api-gateway
          predicates:
            - Path=/swagger-ui/**
            - Path=/v3/api-docs/**
            - Path=/swagger-ui.html
          filters:
            - RewritePath=/swagger-ui.html, /swagger-ui/index.html
      httpclient:
        connect-timeout: 5000
        response-timeout: 5000

eureka:
  instance:
    prefer-ip-address: false
    hostname: ${HOSTNAME:api-gateway}
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
  client:
    service-url:
      defaultZone: http://${EUREKA_USERNAME:craftpilot}:${EUREKA_PASSWORD:password}@${EUREKA_SERVER_HOST:eureka-server}:${EUREKA_SERVER_PORT:8761}/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 5
    eureka-server-connect-timeout-seconds: 5
    eureka-server-read-timeout-seconds: 5
    eureka-service-url-poll-interval-seconds: 5

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.netflix.discovery: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG
    org.springframework.cloud.gateway: DEBUG
