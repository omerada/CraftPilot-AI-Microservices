server:
  port: 8064
  compression:
    enabled: true
    mime-types: application/json,text/plain
    min-response-size: 1024
  shutdown: graceful

spring:
  application:
    name: analytics-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}
    include: kafka-base
  cloud:
    discovery:
      enabled: true
  main:
    web-application-type: reactive
    fail-fast: false
    allow-bean-definition-overriding: true
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://${MONGO_ROOT_USERNAME:craftpilot}:${MONGO_ROOT_PASSWORD:secure_password}@${MONGODB_HOST:craftpilot-mongodb}:27017/${SPRING_DATA_MONGODB_DATABASE:analytics}?authSource=admin&retryWrites=true&w=majority&serverSelectionTimeoutMS=30000&connectTimeoutMS=20000&socketTimeoutMS=60000}
      database: ${SPRING_DATA_MONGODB_DATABASE:analytics}
      auto-index-creation: ${MONGODB_AUTO_INDEX_CREATION:false}
      connect-timeout: 60000
      socket-timeout: 60000
      max-wait-time: 120000
      max-connection-idle-time: 300000
      max-connection-life-time: 600000
      # MongoDB health ve bağlantı dayanıklılığı ayarları
      retry-writes: true
      max-connection-pool-size: 20
      min-connection-pool-size: 5
      server-selection-timeout: 60000
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:13579ada}
      timeout: 10000
      connect-timeout: 10000

# Kafka topic yapılandırması
kafka:
  topics:
    analytics-events: analytics-events
    metrics-events: metrics-events
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
  enabled: ${KAFKA_ENABLED:true}
  admin:
    fail-fast: false
    auto-create: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: mongo,redis,diskSpace
        liveness:
          include: ping
  health:
    mongodb:
      enabled: true
    redis:
      enabled: false
    livenessState:
      enabled: true
    readinessState:
      enabled: true
    validate-group-membership: false
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://craftpilot:13579ada@eureka-server:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 30

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true

openai:
  api-key: ${OPENAI_API_KEY}

resilience4j:
  circuitbreaker:
    instances:
      analyticsService:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] [%X{userId}] %-5level %logger{36} - %msg%n"
  level:
    com.craftpilot: ${LOGGING_LEVEL_COM_CRAFTPILOT:INFO}
    org.springframework.data.mongodb: INFO
    org.springframework.web: INFO

# MongoDB resilience configuration
mongodb:
  connection:
    retry:
      max-attempts: 10
      initial-interval: 1000
      max-interval: 30000
      multiplier: 2.0
  indexes:
    creation:
      enabled: ${MONGODB_INDEX_CREATION_ENABLED:true}
      startup-fail-fast: false
