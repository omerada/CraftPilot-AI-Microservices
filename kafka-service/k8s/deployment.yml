apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-service
  namespace: craftpilot
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kafka-service
  template:
    metadata:
      labels:
        app: kafka-service
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kafka-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: kafka-service
          image: craftpilot/kafka-service:latest-arm64
          ports:
            - containerPort: 9093
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka:9092"
            - name: JAVA_OPTS
              value: "-XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication"
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 9093
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 40
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9093
            initialDelaySeconds: 90
            periodSeconds: 20
            failureThreshold: 5
            timeoutSeconds: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9093
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 3
            successThreshold: 2
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
            requests:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
