server:
  port: 9093
  compression:
    enabled: true
    mime-types: application/json,text/plain
    min-response-size: 1024
  shutdown: graceful

spring:
  application:
    name: kafka-service
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    producer:
      bootstrap-servers: ${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:kafka:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring.json.add.type.headers: false
        retries: 3
        delivery.timeout.ms: 120000
        request.timeout.ms: 30000
        retry.backoff.ms: 1000
        max.block.ms: 60000
    consumer:
      bootstrap-servers: ${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:kafka:9092}
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "com.craftpilot.*"
        isolation.level: read_committed
        max.poll.interval.ms: 300000
        session.timeout.ms: 45000
        heartbeat.interval.ms: 10000
    admin:
      bootstrap-servers: ${SPRING_KAFKA_ADMIN_BOOTSTRAP_SERVERS:kafka:9092}
      properties:
        request.timeout.ms: 20000
        retry.backoff.ms: 500

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://craftpilot:13579ada@eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    health-check-url-path: /actuator/health

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: diskSpace,ping
        liveness:
          include: ping
  health:
    defaults:
      enabled: true
    circuitbreakers:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    kafka:
      enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.craftpilot: DEBUG
    org.springframework.web: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
