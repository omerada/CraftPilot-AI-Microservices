server:
  port: 9093
  compression:
    enabled: true
    mime-types: application/json,text/plain
  shutdown: graceful

spring:
  application:
    name: kafka-service
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    admin:
      auto-create: false
      fail-fast: true
      properties:
        bootstrap.servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    properties:
      security.protocol: PLAINTEXT
      reconnect.backoff.ms: 1000
      request.timeout.ms: 30000
      sasl.mechanism: PLAIN
      ssl.endpoint.identification.algorithm: ""
      reconnect.backoff.max.ms: 10000
      retry.backoff.ms: 1000
      delivery.timeout.ms: 120000
      max.block.ms: 60000
      metadata.max.age.ms: 300000
      metadata.max.idle.ms: 300000
      connections.max.idle.ms: 180000
      max.poll.interval.ms: 300000
      session.timeout.ms: 45000
      heartbeat.interval.ms: 15000
      max.poll.records: 500
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        retries: 3
        acks: all
        retry.backoff.ms: 1000
        request.timeout.ms: 30000
        batch-size: 16384
        buffer-memory: 33554432
        compression-type: snappy
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      max-poll-records: 500
      isolation-level: read_committed
    listener:
      missing-topics-fatal: false

kafka:
  topics:
    user-events:
      name: user-events
      partitions: 3
      replicas: 3
    subscription-events:
      name: subscription-events
      partitions: 3
      replicas: 3
    notification-events:
      name: notification-events
      partitions: 3
      replicas: 3
    credit-events:
      name: credit-events
      partitions: 3
      replicas: 3
    image-events:
      name: image-events
      partitions: 3
      replicas: 3
    analytics-events:
      name: analytics-events
      partitions: 3
      replicas: 3
    llm-events:
      name: llm-events
      partitions: 3
      replicas: 3
    payment-events:
      name: payment-events
      partitions: 3
      replicas: 3

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://craftpilot:13579ada@eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      show-components: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    root: INFO
    com.craftpilot: DEBUG
