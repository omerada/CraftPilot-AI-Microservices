version: "3.8"

networks:
  craftpilot-network:
    name: craftpilot-network

services:
  # Infrastructure Services
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass 13579ada
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "13579ada", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Redis Service
  redis-service:
    image: ${DOCKERHUB_USERNAME}/redis-service:latest-arm64
    container_name: redis-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=13579ada
      - SPRING_CLOUD_GCP_SA_KEY_LOCATION=file:/app/gcp-credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
    volumes:
      - ${GCP_SA_KEY_PATH:-./redis-service/src/main/resources/firebase-service-account.json}:/app/gcp-credentials.json:ro
    networks:
      - craftpilot-network
    depends_on:
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - craftpilot-network
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service Discovery
  eureka-server:
    container_name: eureka-server
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
    image: ${DOCKERHUB_USERNAME}/eureka-server:latest-arm64
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_USERNAME=craftpilot
      - EUREKA_PASSWORD=13579ada
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # API Gateway
  api-gateway:
    image: ${DOCKERHUB_USERNAME}/api-gateway:latest-arm64
    container_name: api-gateway
    ports:
      - "8070:8070"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_USERNAME=${EUREKA_USERNAME}
      - EUREKA_PASSWORD=${EUREKA_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GCP_SA_KEY=${GCP_SA_KEY}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
    volumes:
      - ${GCP_SA_KEY_PATH}:/gcp-credentials.json:ro
    networks:
      - craftpilot-network
    depends_on:
      eureka-server:
        condition: service_healthy

  # LLM Service
  llm-service:
    container_name: llm-service
    image: ${DOCKERHUB_USERNAME}/llm-service:${VERSION:-latest}
    ports:
      - "8062:8062"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=13579ada
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_ADMIN_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ${GCP_SA_KEY_PATH:-./llm-service/src/main/resources/firebase-service-account.json}:/app/gcp-credentials.json:ro
    networks:
      - craftpilot-network
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8062/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Credit Service
  credit-service:
    container_name: credit-service
    build:
      context: .
      dockerfile: credit-service/Dockerfile
    ports:
      - "8093:8093"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
      - FIREBASE_CREDENTIAL_PATH=/app/config/firebase-service-account.json
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/firebase-service-account.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - SPRING_SECURITY_USER_NAME=${EUREKA_USERNAME}
      - SPRING_SECURITY_USER_PASSWORD=${EUREKA_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=13579ada
    volumes:
      - ./credit-service/src/main/resources/firebase-service-account.json:/app/config/firebase-service-account.json
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Subscription Service
  subscription-service:
    container_name: subscription-service
    build:
      context: .
      dockerfile: subscription-service/Dockerfile
    ports:
      - "8091:8091"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
      - FIREBASE_CREDENTIAL_PATH=/app/config/firebase-service-account.json
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/firebase-service-account.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - SPRING_SECURITY_USER_NAME=${EUREKA_USERNAME}
      - SPRING_SECURITY_USER_PASSWORD=${EUREKA_PASSWORD}
    volumes:
      - ./subscription-service/src/main/resources/firebase-service-account.json:/app/config/firebase-service-account.json
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # User Service
  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "8092:8092"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
      - FIREBASE_CREDENTIAL_PATH=/app/config/firebase-service-account.json
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/firebase-service-account.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - SPRING_SECURITY_USER_NAME=${EUREKA_USERNAME}
      - SPRING_SECURITY_USER_PASSWORD=${EUREKA_PASSWORD}
    volumes:
      - ./user-service/src/main/resources/firebase-service-account.json:/app/config/firebase-service-account.json
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Notification Service
  notification-service:
    container_name: notification-service
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    ports:
      - "8094:8094"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
      - GMAIL_SERVICE_ACCOUNT=${GMAIL_SERVICE_ACCOUNT}
      - GCP_SA_KEY=/app/config/service-account.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - SPRING_SECURITY_USER_NAME=${EUREKA_USERNAME}
      - SPRING_SECURITY_USER_PASSWORD=${EUREKA_PASSWORD}
    volumes:
      - ${GCP_SA_KEY_PATH:-./service-account.json}:/app/config/service-account.json:ro
    depends_on:
      eureka-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8094/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.49.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M

  grafana:
    image: grafana/grafana:10.3.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - craftpilot-network
    healthcheck:
      test:
        ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M

  # Admin Service
  admin-service:
    image: ${DOCKERHUB_USERNAME}/admin-service:latest-arm64
    container_name: admin-service
    ports:
      - "8097:8097"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/
      - SPRING_CLOUD_GCP_SA_KEY_LOCATION=file:/app/gcp-credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-craft-pilot-ai}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=13579ada
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ${GCP_SA_KEY_PATH:-./admin-service/src/main/resources/firebase-service-account.json}:/app/gcp-credentials.json:ro
    networks:
      - craftpilot-network
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8097/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  # Analytics Service
  analytics-service:
    container_name: analytics-service
    build:
      context: .
      dockerfile: analytics-service/Dockerfile
    image: ${DOCKERHUB_USERNAME}/analytics-service:${VERSION:-latest}
    ports:
      - "8064:8064"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka/
      - FIREBASE_CREDENTIAL_PATH=/app/config/firebase-service-account.json
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/firebase-service-account.json
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=13579ada
    volumes:
      - ${GCP_SA_KEY_PATH}:/app/config/firebase-service-account.json:ro
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8064/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      eureka-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  kafka-service:
    container_name: kafka-service
    image: ${DOCKERHUB_USERNAME}/kafka-service:latest-arm64
    ports:
      - "9092:9092"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_ADMIN_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - craftpilot-network
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
