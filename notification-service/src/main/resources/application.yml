server:
  port: 8053
  compression:
    enabled: true
    mime-types: application/json,text/plain
    min-response-size: 1024
  shutdown: graceful

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: notification-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  mail:
    sendgrid:
      api-key: ${SENDGRID_API_KEY}
      from: ${SENDGRID_FROM_EMAIL}
  cloud:
    gcp:
      project-id: ${SPRING_CLOUD_GCP_PROJECT_ID:craft-pilot-ai}
      credentials:
        location: ${GOOGLE_APPLICATION_CREDENTIALS:/app/credentials/gcp-credentials.json}
      firestore:
        enabled: true
        project-id: ${SPRING_CLOUD_GCP_PROJECT_ID:craft-pilot-ai}
        emulator:
          enabled: false
      core:
        enabled: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: java.util.Map
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:13579ada}
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1ms
      shutdown-timeout: 100ms
    client-type: lettuce
    connect-timeout: 2000
    retry:
      max-attempts: 3
      initial-interval: 1000
      multiplier: 2.0
      max-interval: 5000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://craftpilot:13579ada@eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

resilience4j:
  circuitbreaker:
    instances:
      notificationService:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 5
  retry:
    instances:
      notificationService:
        maxAttempts: 3
        waitDuration: 1s
  ratelimiter:
    instances:
      notificationService:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 5s

logging:
  level:
    root: INFO
    '[com.craftpilot.notificationservice]': INFO
    '[org.springframework.data]': INFO
    '[org.springframework.security]': INFO
    '[org.springframework.web]': INFO
    '[org.springframework.cloud]': INFO

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  packages-to-scan: com.craftpilot.notificationservice.controller
  paths-to-match: /**
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
