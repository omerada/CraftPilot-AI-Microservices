apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: craftpilot
  labels:
    app: notification-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: notification-service
          image: craftpilot/notification-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8070
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SERVER_PORT
              value: "8053"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redis-port
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: bootstrap-servers
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: bootstrap-servers
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTO_CREATE_TOPICS
              value: "true"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_MIN_PARTITION_COUNT
              value: "1"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_REPLICATION_FACTOR
              value: "1"
            - name: SPRING_CLOUD_FUNCTION_DEFINITION
              value: "processNotification"
            - name: SPRING_CLOUD_STREAM_BINDINGS_PROCESSNOTIFICATION_IN_0_DESTINATION
              value: "notifications"
            - name: SPRING_CLOUD_STREAM_BINDINGS_PROCESSNOTIFICATION_IN_0_GROUP
              value: "notification-service-group"
            - name: SPRING_CLOUD_STREAM_BINDINGS_PROCESSNOTIFICATION_OUT_0_DESTINATION
              value: "notifications"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: bootstrap-servers
            - name: SPRING_CLOUD_STREAM_DEFAULTBINDER
              value: "kafka"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_REPLICATIONFACTOR
              value: "1"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_REQUIRED_ACKS
              value: "1"
            - name: EUREKA_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: eureka-config
                  key: eureka-url
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: notification-service-secrets
                  key: sendgrid-api-key
            - name: SENDGRID_FROM_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: notification-service-config
                  key: sendgrid-from-email
            - name: FCM_SERVICE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: notification-service-secrets
                  key: fcm-service-account
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/gcp/credentials/firebase-credentials.json"
            - name: SPRING_CLOUD_GCP_PROJECT_ID
              value: craft-pilot-ai
            - name: JAVA_OPTS
              value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -Dio.netty.transport.noNative=true"
            - name: FIREBASE_CONFIG
              value: /app/config/firebase-service-account.json
            - name: SPRING_MAIL_SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: notification-service-secrets
                  key: sendgrid-api-key
            - name: SPRING_MAIL_SENDGRID_FROM
              valueFrom:
                configMapKeyRef:
                  name: notification-service-config
                  key: sendgrid-from-email
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8053
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8053
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: gcp-credentials
              mountPath: /app/config/gcp-credentials.json
              subPath: gcp-credentials.json
              readOnly: true
            - name: firebase-credentials
              mountPath: "/etc/gcp/credentials"
              readOnly: true
            - name: logs
              mountPath: "/app/logs"
      volumes:
        - name: gcp-credentials
          secret:
            secretName: notification-service-secrets
            items:
              - key: gcp-service-account
                path: gcp-credentials.json
            defaultMode: 0444
        - name: firebase-credentials
          secret:
            secretName: firebase-credentials
            items:
              - key: credentials.json
                path: firebase-credentials.json
        - name: logs
          emptyDir: {}
