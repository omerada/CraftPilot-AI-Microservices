apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-config
  namespace: craftpilot
data:
  application.yml: |
    server:
      port: 8053  # Port doğrulaması

    spring:
      application:
        name: notification-service
      cache:
        type: redis
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        consumer:
          group-id: notification-service-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          properties:
            spring.json.trusted.packages: "*"
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      cloud:
        stream:
          kafka:
            binder:
              brokers: ${KAFKA_BOOTSTRAP_SERVERS}
              configuration:
                security.protocol: PLAINTEXT
          bindings:
            input:
              destination: notifications
              content-type: application/json
              group: notification-service-group
            output:
              destination: notifications
              content-type: application/json
      data:
        redis:
          repositories:
            enabled: false
      mail:
        host: smtp.sendgrid.net
        port: 587
        username: apikey
        password: ${SENDGRID_API_KEY}
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
            transport:
              protocol: smtp
        provider: sendgrid
        sendgrid:
          api-key: ${SENDGRID_API_KEY}
          from: ${SENDGRID_FROM_EMAIL:noreply@craftpilot.com}
          template-path: templates/email
          enabled: true

    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
        metrics:
          enabled: true
        prometheus:
          enabled: true

    logging:
      level:
        com.craftpilot.notificationservice: INFO
        org.springframework.data: INFO
        org.springframework.security: INFO

    resilience4j:
      circuitbreaker:
        instances:
          notificationService:
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: COUNT_BASED
            minimumNumberOfCalls: 5
            waitDurationInOpenState: 50s
            failureRateThreshold: 50
      ratelimiter:
        instances:
          notificationService:
            limitForPeriod: 100
            limitRefreshPeriod: 1s
            timeoutDuration: 3s

    notification:
      email:
        from: noreply@craftpilot.com
        template-path: templates/email
      sms:
        enabled: true
        provider: twilio
      push:
        enabled: true
        provider: firebase
        firebase:
          credentials-path: /app/firebase-service-account.json
          project-id: ${GOOGLE_CLOUD_PROJECT_ID}
      retry:
        max-attempts: 3
        initial-interval: 1000
        multiplier: 2.0

    springdoc:
      api-docs:
        path: /api-docs
      swagger-ui:
        path: /swagger-ui.html
        operationsSorter: method
