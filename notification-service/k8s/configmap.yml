apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-config
  namespace: craftpilot
data:
  application.yml: |
    server:
      port: 8053

    spring:
      application:
        name: notification-service
      cache:
        type: redis
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        properties:
          security.protocol: PLAINTEXT
        consumer:
          group-id: notification-service-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          properties:
            spring.json.trusted.packages: "*"
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      cloud:
        function:
          definition: notificationEventConsumer;notificationEventProducer
        stream:
          kafka:
            binder:
              brokers: ${KAFKA_BOOTSTRAP_SERVERS}
              autoAddPartitions: true
              minPartitionCount: 1
              replicationFactor: 1
              configuration:
                security.protocol: PLAINTEXT
                auto.offset.reset: earliest
          bindings:
            notificationEventConsumer-in-0:
              destination: notifications
              group: notification-service-group
              consumer:
                maxAttempts: 3
                backOffInitialInterval: 1000
                backOffMaxInterval: 10000
                backOffMultiplier: 2.0
            notificationEventProducer-out-0:
              destination: notifications
      data:
        redis:tials:
          repositories:e:/app/credentials/gcp-credentials.json
            enabled: falseLE_CLOUD_PROJECT_ID}
          host: ${REDIS_HOST:redis}
          port: ${REDIS_PORT:6379}
          password: ${REDIS_PASSWORD:13579ada}
      sendgrid:bled: false
        api-key: ${SENDGRID_API_KEY}
        from: ${SENDGRID_FROM_EMAIL:noreply@craftpilot.com}
        template-path: templates/email3579ada}
        enabled: true
        api-key: ${SENDGRID_API_KEY}
    management:{SENDGRID_FROM_EMAIL:noreply@craftpilot.com}
      health:-path: templates/email
        mail:led: true
          enabled: false
      endpoints:
        web::
          exposure:
            include: health,info,metrics,prometheus
      endpoint:ude: health,info,metrics,prometheus
        health:
          show-details: always
        metrics: always
          enabled: true        metrics:
        prometheus:abled: true
          enabled: trueetheus:
 true
    logging:
      level:
        root: INFO
        '[com.craftpilot.notificationservice]': INFO
        '[org.springframework]':pilot.notificationservice]': INFO
          data: INFOramework]':
          security: INFO          data: INFO
          web: INFOy: INFO
          cloud: INFO
NFO
    resilience4j:
      circuitbreaker:
        instances:
          notificationService:
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: COUNT_BASEDHalfOpenState: 3
            minimumNumberOfCalls: 5gWindowType: COUNT_BASED
            waitDurationInOpenState: 50smNumberOfCalls: 5
            failureRateThreshold: 50State: 50s
      ratelimiter:d: 50
        instances:
          notificationService:
            limitForPeriod: 100          notificationService:      retry:
            limitRefreshPeriod: 1sForPeriod: 100:
            timeoutDuration: 3slimitRefreshPeriod: 1stificationService:

    notification:
      email:
        from: ${SENDGRID_FROM_EMAIL:noreply@craftpilot.com}l:cation:
        template-path: templates/emailRID_FROM_EMAIL:noreply@craftpilot.com}
        provider: sendgridemplates/email_FROM_EMAIL:noreply@craftpilot.com}
      sms:plate-path: templates/emailvider: sendgrid
        enabled: truedgrid
        provider: twilio
      push:true twilio
        enabled: true
        provider: firebase
        firebase:led: trueider: firebase
          credentials-path: /app/firebase-service-account.jsonase
          project-id: ${GOOGLE_CLOUD_PROJECT_ID}s/firebase-credentials.json
      retry:ath: /app/firebase-service-account.json{GOOGLE_CLOUD_PROJECT_ID}
        max-attempts: 3          project-id: ${GOOGLE_CLOUD_PROJECT_ID}      retry:
        initial-interval: 1000mpts: 3
        multiplier: 2.0empts: 3-interval: 1000
l: 1000
    springdoc:
      api-docs:
        path: /api-docs
      swagger-ui:        path: /api-docs      api-docs:



        operationsSorter: method        path: /swagger-ui.html



        operationsSorter: method        path: /swagger-ui.html      swagger-ui:        path: /api-docs
      swagger-ui:
        path: /swagger-ui.html
        operationsSorter: method
