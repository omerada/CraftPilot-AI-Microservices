spring:
  application:
    name: redis-service
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:your_redis_password}
    timeout: 2000
    lettuce:
      pool:
        max-active: 16
        max-idle: 8
        min-idle: 4
        max-wait: 1000ms
      shutdown-timeout: 200ms
  cloud:
    gateway:
      httpclient:
        pool:
          max-idle-time: 15s
          type: elastic
          max-connections: 1000
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 50
              burstCapacity: 100
              requestedTokens: 1

server:
  port: 1115
  compression:
    enabled: true
    mime-types: application/json
    min-response-size: 1024

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.craftpilot.redisservice: DEBUG
    org.springframework.data.redis: INFO
    io.lettuce: INFO

resilience4j:
  ratelimiter:
    instances:
      basic:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
