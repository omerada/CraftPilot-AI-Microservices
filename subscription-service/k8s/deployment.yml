apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-service
  namespace: craftpilot
  labels:
    app: subscription-service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: subscription-service
  template:
    metadata:
      labels:
        app: subscription-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8052"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - subscription-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: subscription-service
          image: craftpilot/subscription-service:latest-arm64
          imagePullPolicy: Always
          ports:
            - containerPort: 8085
              name: http
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redis-port
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: bootstrap-servers
            - name: EUREKA_SERVER_URL
              value: "http://eureka-server:8761"
            - name: SPRING_CLOUD_CONFIG_URI
              value: "http://config-server:8888"
            - name: SERVER_PORT
              value: "8085"
            - name: SPRING_CLOUD_KUBERNETES_ENABLED
              value: "true"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/gcp-credentials/credentials.json"
            - name: EUREKA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: eureka-credentials
                  key: username
            - name: EUREKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: eureka-credentials
                  key: password
          volumeMounts:
            - name: gcp-credentials
              mountPath: "/gcp-credentials"
              readOnly: true
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8052
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8052
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8052
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: gcp-credentials
          secret:
            secretName: gcp-credentials
      terminationGracePeriodSeconds: 60
