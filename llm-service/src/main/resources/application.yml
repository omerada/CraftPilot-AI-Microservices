server:
  port: 8062
  compression:
    enabled: true
    mime-types: application/json,text/plain
    min-response-size: 1024
  shutdown: graceful
  netty:
    connection-timeout: 5000
    idle-timeout: 15000
    max-keep-alive-requests: 1000
    threads:
      worker: 4
      boss: 1
    validate-headers: false
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: llm-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  webflux:
    base-path: /
    format:
      date: yyyy-MM-dd
      date-time: yyyy-MM-dd HH:mm:ss
      time: HH:mm:ss
    log-request-details: true
  codec:
    max-in-memory-size: 16MB
    log-request-details: true
  kafka:
    properties:
      security.protocol: PLAINTEXT
      reconnect.backoff.ms: 1000
      reconnect.backoff.max.ms: 5000
    consumer:
      auto-offset-reset: earliest
      group-id: llm-service-group
    producer:
      retries: 3
      acks: all
  cloud:
    discovery:
      enabled: true
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:13579ada}
      timeout: 5000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: 1000ms
  reactor:
    netty:
      pool:
        type: elastic
        maxConnections: 500
        acquireTimeout: 5000
      client:
        proxy:
          type: NO_PROXY
  security:
    basic:
      enabled: false

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://craftpilot:13579ada@eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: false
    hostname: ${HOSTNAME:llm-service}
    lease-renewal-interval-in-seconds: 10
    health-check-url-path: /actuator/health

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

openrouter:
  api:
    key: ${OPENROUTER_API_KEY}
    url: https://openrouter.ai/api/v1
    defaultModel: google/gemini-2.0-flash-lite-preview-02-05:free
    maxTokens: 2000
    temperature: 0.7
    retryAttempts: 3
    retryDelay: 1000
    http-referer: https://craftpilot.io

kafka:
  topics:
    ai-events: ai-events
    llm-completions: llm-completions
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
  consumer:
    group-id: llm-service-group
    auto-offset-reset: earliest
  producer:
    retries: 3
    acks: all
    properties:
      max.block.ms: 5000
      request.timeout.ms: 2000

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.craftpilot: DEBUG
    org.springframework.web: DEBUG
    org.springframework.cloud: INFO
    reactor.netty: DEBUG
    io.netty: DEBUG
    com.craftpilot.llmservice: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.netty.http.client: DEBUG
    org.springframework.cloud.gateway: DEBUG

netty:
  native:
    enabled: false
  io:
    noNative: true
    noUnsafe: true
  use-native-transport: true
  workdir: /tmp/netty

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    configUrl: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: LLM API
  api-docs:
    path: /v3/api-docs
    enabled: true
  show-actuator: true
  packages-to-scan: com.craftpilot.llmservice.controller
  paths-to-match: /ai/**

# CORS Yapılandırması
cors:
  allowed-origins: "*"
  allowed-methods: "*"
  allowed-headers: "*"
  exposed-headers: "*"
  allow-credentials: true
  max-age: 3600
