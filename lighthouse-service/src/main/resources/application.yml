spring:
  application:
    name: lighthouse-service
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:TEST123}
      connect-timeout: 5000 # Bağlantı zaman aşımı
      timeout: 3000 # Komut zaman aşımı
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: 2000ms
        shutdown-timeout: 500ms
        # Ekstra dayanıklılık ayarları
        client-name: lighthouse-service
        client-options:
          disconnect-timeout: 3000ms
          auto-reconnect: true
  task:
    execution:
      pool:
        core-size: 4
        max-size: 8
        queue-capacity: 20
        keep-alive: 60s
        allow-core-thread-timeout: true

server:
  port: ${PORT:8085}
  tomcat:
    max-threads: 50
    min-spare-threads: 10

lighthouse:
  queue:
    name: ${LIGHTHOUSE_QUEUE_NAME:lighthouse-jobs}
  results:
    prefix: ${LIGHTHOUSE_RESULTS_PREFIX:lighthouse-results:}
  redis:
    connection:
      max-attempts: 10
      retry-delay-ms: 5000
  job:
    timeout: ${LIGHTHOUSE_JOB_TIMEOUT:600} # 10 dakika
    # Ekstra zaman aşımı koruma mekanizması
    max-processing-time: ${LIGHTHOUSE_MAX_PROCESSING_TIME:900} # 15 dakika
  worker:
    count: ${LIGHTHOUSE_WORKER_COUNT:2} # Daha az worker kullan
    poll-interval: 5000 # Poll aralığını arttır
    check-interval: 30000 # Worker kontrol aralığı (ms)
    restart-attempts: ${LIGHTHOUSE_WORKER_RESTART_ATTEMPTS:3} # Worker yeniden başlatma deneme sayısı
  cli:
    path: ${LIGHTHOUSE_CLI_PATH:/usr/local/bin/lighthouse} # Lighthouse CLI'ın tam yolu
    timeout: ${LIGHTHOUSE_CLI_TIMEOUT:600} # CLI işlem zaman aşımı (sn)
    # Lighthouse CLI için ek ayarlar
    enable-error-reporting: ${LIGHTHOUSE_ENABLE_ERROR_REPORTING:true} # Hata raporlamayı etkinleştir
    max-retries: ${LIGHTHOUSE_CLI_MAX_RETRIES:3} # Başarısızlık durumunda yeniden deneme sayısı
    retry-delay: ${LIGHTHOUSE_CLI_RETRY_DELAY:10000} # Yeniden denemeler arasındaki bekleme süresi (ms)
    # Lighthouse CLI çalıştırma stratejisi
    use-npx: false # NPX kullanımını devre dışı bırak
    # Chrome bayrağı ayarları
    chrome-flags: "--headless --no-sandbox --disable-gpu --disable-dev-shm-usage --disable-software-rasterizer --chrome-path=/usr/bin/google-chrome"
    # Kategoriler ve yapılandırma
    categories:
      basic: "performance"
      detailed: "performance,accessibility,best-practices,seo"
  temp:
    dir: ${LIGHTHOUSE_TEMP_DIR:/tmp/lighthouse} # Geçici dosyalar için dizin
    cleanup: ${LIGHTHOUSE_TEMP_CLEANUP:true} # Geçici dosyaların temizlenmesi

logging:
  level:
    root: INFO
    com.craftpilot: INFO
    org.springframework.data.redis: WARN
    io.lettuce: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: redis,diskSpace
          show-details: always
        liveness:
          include: ping
          show-details: always
  health:
    redis:
      enabled: true
    livenessState:
      enabled: true
    readinessState:
      enabled: true
