version: "3.8"

services:
  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - craftpilot-network
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka CLI Tools - Kafka event inceleme aracı
  kafka-tools:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-tools
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: /bin/bash
    tty: true
    stdin_open: true
    command: -c "echo 'Kafka CLI tools hazır. Kullanım için: docker exec -it kafka-tools bash' && sleep infinity"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - craftpilot-network

  # Redis Service
  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      --requirepass 13579ada
      --maxmemory 800mb
      --maxmemory-policy volatile-lru
      --appendonly yes
      --appendfsync everysec
      --no-appendfsync-on-rewrite yes
    volumes:
      - redis-data:/data
    networks:
      - craftpilot-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "13579ada", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  redis-data:

networks:
  craftpilot-network:
    external: true
    name: craftpilot-network
