spring:
  application:
    name: eurekaserver
  output:
    ansi:
      enabled: always

server:
  port: 8761
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

eureka:
  instance:
    hostname: ${EUREKA_HOST:localhost}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    # Performance tuning
    enableSelfPreservation: false
    renewalPercentThreshold: 0.85
    responseCacheUpdateIntervalMs: 3000
    responseCacheAutoExpirationInSeconds: 180
    evictionIntervalTimerInMs: 3000
    # Rate limiting
    rateLimiterEnabled: true
    rateLimiterThrottleStandardClients: true
    rateLimiterPrivilegedClients:
      - "apigateway"
      - "userservice"
    rateLimiterBurstSize: 10
    rateLimiterRegistrationsPerSecond: 5

management:
  endpoints:
    web:
      exposure:
        include: ["health", "info", "metrics"]
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.craftpilot.eurekaserver: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    org.springframework.cloud: INFO
