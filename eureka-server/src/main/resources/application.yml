spring:
  application:
    name: eureka-server
  output:
    ansi:
      enabled: always
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  security:
    user:
      name: ${eureka.security.username}
      password: ${eureka.security.password}

server:
  port: 8057
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024
  shutdown: graceful

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    # Performance tuning
    wait-time-in-ms-when-sync-empty: 0
    enable-self-preservation: false
    renewal-percent-threshold: 0.85
    response-cache-update-interval-ms: 3000
    eviction-interval-timer-in-ms: 3000
    # Rate limiting
    rateLimiterEnabled: true
    rateLimiterThrottleStandardClients: true
    rateLimiterPrivilegedClients:
      - "apigateway"
      - "userservice"
    rateLimiterBurstSize: 10
    rateLimiterRegistrationsPerSecond: 5
  security:
    username: eureka
    password: ${EUREKA_PASSWORD:secret}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.craftpilot.eurekaserver: DEBUG
    org.springframework.cloud.netflix.eureka: INFO
    com.netflix.discovery: INFO
    com.netflix.eureka: INFO
