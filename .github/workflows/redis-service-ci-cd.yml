name: Redis Service CI/CD

on:
  push:
    branches: [master]
    paths:
      - "redis-service/**"
      - ".github/workflows/redis-service-ci-cd.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./redis-service
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Grant execute permission for mvnw
        run: chmod +x mvnw

      - name: Build
        run: ./mvnw clean package -DskipTests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./redis-service
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/redis-service:latest-arm64

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Infrastructure containers
            docker network create craftpilot-network || true

            # Start Redis container if not running
            if ! docker ps | grep -q redis; then
              docker run -d \
                --name redis \
                --network craftpilot-network \
                -p 6379:6379 \
                -e REDIS_PASSWORD=13579ada \
                redis:latest --requirepass 13579ada
            fi

            # Wait for Redis to be ready
            echo "Waiting for Redis to be ready..."
            sleep 10

            # Remove existing Redis service container
            docker stop redis-service || true
            docker rm redis-service || true

            # Run new Redis service container
            docker run -d \
              --name redis-service \
              --network craftpilot-network \
              --restart unless-stopped \
              -p 8085:8085 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e SPRING_REDIS_HOST=redis \
              -e SPRING_REDIS_PORT=6379 \
              -e SPRING_REDIS_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/redis-service:latest-arm64

            # Wait for Redis service to be ready
            echo "Waiting for Redis service to start..."
            sleep 30

            # Health check
            for i in {1..30}; do
              if curl -s http://localhost:8085/actuator/health | grep -q "UP"; then
                echo "Service is healthy"
                exit 0
              fi
              echo "Attempt $i: Service not ready yet..."
              if [ $i -eq 15 ]; then
                echo "Mid-point container logs:"
                docker logs redis-service
              fi
              sleep 10
            done

            echo "Service failed to become healthy within timeout"
            echo "Final container logs:"
            docker logs redis-service
            exit 1

      - name: Trigger Deploy Services Workflow
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: trigger-deploy-services
