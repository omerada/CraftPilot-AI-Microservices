name: AIQuestion Service CI/CD

on:
  push:
    paths:
      - "aiquestion-service/**"
      - ".github/workflows/aiquestion-service-ci-cd.yml"
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Create Config Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p /opt/craftpilot

      - name: Build with Maven
        run: |
          cd aiquestion-service
          mvn clean package -DskipTests

      - name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cd aiquestion-service
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker buildx create --use
          docker buildx build --platform linux/arm64 -t $DOCKER_USERNAME/aiquestion-service:latest-arm64 --push .

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: DOCKER_USERNAME,OPENAI_API_KEY
          script: |
            echo "=== Creating Network ==="
            docker network create craftpilot-network || true

            echo "=== Pulling ARM64 Image ==="
            docker pull $DOCKER_USERNAME/aiquestion-service:latest-arm64

            echo "=== Stopping Old Container ==="
            docker stop aiquestion-service || true
            docker rm aiquestion-service || true

            echo "=== Starting New Container ==="
            docker run -d \
              --name aiquestion-service \
              --network craftpilot-network \
              -p 8062:8062 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e OPENAI_API_KEY=$OPENAI_API_KEY \
              $DOCKER_USERNAME/aiquestion-service:latest-arm64

            echo "=== Waiting for Container to Start ==="
            sleep 30

            echo "=== Container Logs ==="
            docker logs aiquestion-service

            echo "=== Health Check ==="
            HEALTH_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8062/actuator/health)
            if [ "$HEALTH_CHECK" = "200" ]; then
              echo "Service is healthy"
            else
              echo "Service failed health check"
              docker stop aiquestion-service
              docker rm aiquestion-service
              exit 1
            fi
