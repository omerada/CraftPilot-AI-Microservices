name: Deploy Services

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "docker-compose.yml"
      - "start-services.sh"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Docker setup
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          EUREKA_USERNAME: craftpilot
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          GMAIL_SERVICE_ACCOUNT: ${{ secrets.GMAIL_SERVICE_ACCOUNT }}
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,DOCKERHUB_TOKEN,EUREKA_USERNAME,EUREKA_PASSWORD,GCP_SA_KEY,GCP_PROJECT_ID,REDIS_PASSWORD,GMAIL_SERVICE_ACCOUNT,GRAFANA_ADMIN_PASSWORD
          script: |
            # Prepare directory
            mkdir -p /opt/craftpilot
            cd /opt/craftpilot

            # Create env file
            cat > .env << EOF
            DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
            EUREKA_USERNAME=craftpilot
            EUREKA_PASSWORD=${EUREKA_PASSWORD}
            GCP_SA_KEY_PATH=/opt/craftpilot/gcp-credentials.json
            GCP_PROJECT_ID=${GCP_PROJECT_ID}
            REDIS_PASSWORD=${REDIS_PASSWORD}
            GMAIL_SERVICE_ACCOUNT=${GMAIL_SERVICE_ACCOUNT}
            GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
            VERSION=latest
            EOF

            # Setup GCP credentials
            echo "${GCP_SA_KEY}" > /opt/craftpilot/gcp-credentials.json
            chmod 600 /opt/craftpilot/gcp-credentials.json

            # Start infrastructure services
            docker network create craftpilot-network 2>/dev/null || true

            # Start Redis
            if ! docker ps | grep -q redis; then
              docker run -d \
                --name redis \
                --network craftpilot-network \
                -p 6379:6379 \
                -e REDIS_PASSWORD=${REDIS_PASSWORD} \
                redis:latest redis-server --requirepass ${REDIS_PASSWORD}
              sleep 10
            fi

            # Start Zookeeper
            if ! docker ps | grep -q zookeeper; then
              docker run -d \
                --name zookeeper \
                --network craftpilot-network \
                -e ZOOKEEPER_CLIENT_PORT=2181 \
                -e ZOOKEEPER_TICK_TIME=2000 \
                confluentinc/cp-zookeeper:latest
              sleep 15
            fi

            # Start Kafka
            if ! docker ps | grep -q kafka; then
              docker run -d \
                --name kafka \
                --network craftpilot-network \
                -p 9092:9092 \
                -e KAFKA_BROKER_ID=1 \
                -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \
                -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092 \
                -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT \
                -e KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT \
                -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
                confluentinc/cp-kafka:latest
              sleep 20
            fi

            # Start Eureka Server
            docker pull ${DOCKERHUB_USERNAME}/eureka-server:latest-arm64
            docker stop eureka-server || true
            docker rm eureka-server || true

            docker run -d \
              --name eureka-server \
              --network craftpilot-network \
              -p 8761:8761 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e EUREKA_USERNAME=craftpilot \
              -e EUREKA_PASSWORD=${EUREKA_PASSWORD} \
              ${DOCKERHUB_USERNAME}/eureka-server:latest-arm64

            # Wait for Eureka
            echo "Waiting for Eureka Server..."
            for i in {1..30}; do
              if curl -sf http://localhost:8761/actuator/health; then
                echo "Eureka Server is healthy"
                break
              fi
              echo "Waiting for Eureka... Attempt $i/30"
              sleep 10
            done

            # Start other services
            echo "Starting other services..."
            docker-compose pull
            docker-compose up -d

            # Check services health
            echo "Checking services health..."
            sleep 30

            for service in $(docker-compose ps --services); do
              if ! docker-compose ps $service | grep -q "Up"; then
                echo "$service failed to start"
                docker-compose logs $service
                exit 1
              fi
            done

            echo "All services started successfully!"
