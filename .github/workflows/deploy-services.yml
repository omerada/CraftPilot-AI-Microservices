name: Deploy Services

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deploy-services]
  push:
    branches: [master]
    paths:
      - "docker-compose.yml"
      - "start-services.sh"

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Infrastructure Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== Creating Docker Network ==="
            docker network create craftpilot-network || true

            echo "=== Starting Zookeeper and Kafka ==="
            # Zookeeper için Docker container başlat
            docker run -d \
              --name zookeeper \
              --network craftpilot-network \
              -e ZOOKEEPER_CLIENT_PORT=2181 \
              -e ZOOKEEPER_TICK_TIME=2000 \
              confluentinc/cp-zookeeper:latest

            # Zookeeper'ın başlamasını bekle
            sleep 10

            # Kafka için Docker container başlat
            docker run -d \
              --name kafka \
              --network craftpilot-network \
              -p 9092:9092 \
              -e KAFKA_BROKER_ID=1 \
              -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \
              -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 \
              -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT \
              -e KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT \
              -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
              -e KAFKA_AUTO_CREATE_TOPICS_ENABLE="true" \
              confluentinc/cp-kafka:latest

            # Kafka'nın başlamasını bekle
            sleep 20

            echo "=== Infrastructure Services Started ==="

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          EUREKA_USERNAME: ${{ secrets.EUREKA_USERNAME }}
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,EUREKA_USERNAME,EUREKA_PASSWORD,GCP_SA_KEY
          script_stop: true
          script: |
            echo "=== Starting Deployment Process ==="

            # Environment variables'ları export et
            export DOCKERHUB_USERNAME="$DOCKERHUB_USERNAME"
            export EUREKA_USERNAME="$EUREKA_USERNAME"
            export EUREKA_PASSWORD="$EUREKA_PASSWORD"
            export GCP_SA_KEY="$GCP_SA_KEY"

            # Proje dizinine git
            cd /opt/craftpilot

            # Mevcut docker-compose.yml ve start-services.sh dosyalarını yedekle
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p backups
            cp docker-compose.yml backups/docker-compose_$timestamp.yml || true
            cp start-services.sh backups/start-services_$timestamp.sh || true

            # Yeni dosyaları kopyala
            echo "$DOCKER_COMPOSE_CONTENT" > docker-compose.yml
            echo "$START_SCRIPT_CONTENT" > start-services.sh

            # Yetkileri ayarla
            chmod +x start-services.sh

            echo "=== Starting Services ==="
            ./start-services.sh

            echo "=== Checking Services Status ==="
            docker ps

            echo "=== Deployment Complete ==="
