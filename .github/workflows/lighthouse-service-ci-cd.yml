name: Lighthouse Service CI/CD

on:
  push:
    paths:
      - "lighthouse-service/**"
      - "craft-pilot-commons/**"
      - ".github/workflows/lighthouse-service-ci-cd.yml"
    branches: [main, develop]
  pull_request:
    paths:
      - "lighthouse-service/**"
      - "craft-pilot-commons/**"
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "prod"
        type: choice
        options:
          - prod
          - debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      # Önce commons kütüphanesini derle ve install et
      - name: Build commons library
        run: |
          cd craft-pilot-commons
          mvn clean install -DskipTests

      # Sonra lighthouse-service'i derle
      - name: Build lighthouse-service
        run: |
          cd lighthouse-service
          mvn clean package -DskipTests

  build-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Önce commons kütüphanesini derle
      - name: Build commons library
        run: |
          cd craft-pilot-commons
          mvn clean install -DskipTests

      - name: Grant execute permission for mvnw (if exists)
        run: |
          if [ -f "lighthouse-service/mvnw" ]; then
            chmod +x lighthouse-service/mvnw
          fi

      - name: Build
        run: |
          cd lighthouse-service
          if [ -f "mvnw" ]; then
            ./mvnw clean package -DskipTests
          else
            mvn clean package -DskipTests
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./lighthouse-service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lighthouse-service:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/lighthouse-service:latest
            docker stop lighthouse-service || true
            docker rm lighthouse-service || true

            docker run -d \
              --name lighthouse-service \
              --network craftpilot-network \
              --restart unless-stopped \
              -p 8085:8085 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e SPRING_REDIS_HOST=redis \
              -e SPRING_REDIS_PORT=6379 \
              -e SPRING_REDIS_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/lighthouse-service:latest
