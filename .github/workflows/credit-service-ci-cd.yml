name: Credit Service CI/CD

on:
  push:
    branches: [master]
    paths:
      - "credit-service/**"
      - ".github/workflows/credit-service-ci-cd.yml"
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Grant execute permission for mvnw
        run: |
          cd credit-service
          chmod +x mvnw

      - name: Build and Test
        run: |
          cd credit-service
          ./mvnw clean verify

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd credit-service
          ./mvnw sonar:sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./credit-service
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/credit-service:latest-arm64
            ${{ secrets.DOCKERHUB_USERNAME }}/credit-service:${{ github.sha }}-arm64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/credit-service:buildcache-arm64
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/credit-service:buildcache-arm64,mode=max

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Infrastructure containers
            docker network create craftpilot-network || true

            # Start Kafka & Zookeeper
            if ! docker ps | grep -q kafka; then
              docker run -d \
                --name zookeeper \
                --network craftpilot-network \
                -e ZOOKEEPER_CLIENT_PORT=2181 \
                -e ZOOKEEPER_TICK_TIME=2000 \
                confluentinc/cp-zookeeper:latest

              docker run -d \
                --name kafka \
                --network craftpilot-network \
                -p 9092:9092 \
                -e KAFKA_BROKER_ID=1 \
                -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \
                -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 \
                -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
                -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 \
                -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 \
                confluentinc/cp-kafka:latest
            fi

            # Deploy Credit Service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/credit-service:latest-arm64
            docker stop credit-service || true
            docker rm credit-service || true

            docker run -d \
              --name credit-service \
              --network craftpilot-network \
              --restart unless-stopped \
              -p 8058:8058 \
              -v /opt/craftpilot/gcp-credentials.json:/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e GOOGLE_APPLICATION_CREDENTIALS=/gcp-credentials.json \
              -e SPRING_SECURITY_USER_NAME=craftpilot \
              -e SPRING_SECURITY_USER_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/credit-service:latest-arm64

            # Health check
            for i in {1..12}; do
              if curl -s http://localhost:8058/actuator/health | grep -q "UP"; then
                echo "Service is healthy"
                exit 0
              fi
              echo "Waiting for service to start... Attempt $i"
              sleep 10
            done

            echo "Service failed health check"
            docker logs credit-service
            exit 1
