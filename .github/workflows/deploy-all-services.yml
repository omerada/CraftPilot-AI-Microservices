name: Deploy All Services

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deploy-services]

jobs:
  deploy-core-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: "eureka-server", port: 8761 },
            { name: "api-gateway", port: 8080 },
          ]
    steps:
      - name: Deploy ${{ matrix.service.name }}
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,EUREKA_PASSWORD,REDIS_PASSWORD
          script: |
            # Infrastructure setup
            docker network create craftpilot-network || true

            # Redis setup
            if ! docker ps | grep -q redis; then
              docker run -d \
                --name redis \
                --network craftpilot-network \
                -p 6379:6379 \
                -e REDIS_PASSWORD=13579ada \
                redis:latest --requirepass 13579ada
            fi

            if [ "${{ matrix.service.name }}" = "eureka-server" ]; then
              # Deploy Eureka Server
              docker pull ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64
              docker stop ${{ matrix.service.name }} || true
              docker rm ${{ matrix.service.name }} || true

              docker run -d \
                --name ${{ matrix.service.name }} \
                --network craftpilot-network \
                -p ${{ matrix.service.port }}:${{ matrix.service.port }} \
                -e SPRING_PROFILES_ACTIVE=prod \
                -e EUREKA_USERNAME=craftpilot \
                -e EUREKA_PASSWORD=${EUREKA_PASSWORD} \
                -e SERVER_PORT=${{ matrix.service.port }} \
                ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64

            elif [ "${{ matrix.service.name }}" = "api-gateway" ]; then
              # Deploy API Gateway
              docker pull ${DOCKERHUB_USERNAME}/api-gateway:latest-arm64
              docker stop api-gateway || true
              docker rm api-gateway || true

              docker run -d \
                --name api-gateway \
                --hostname api-gateway \
                --network craftpilot-network \
                --restart unless-stopped \
                -p 8080:8080 \
                -v /opt/craftpilot/gcp-credentials.json:/app/config/gcp-credentials.json:ro \
                -e SPRING_PROFILES_ACTIVE=prod \
                -e SERVER_PORT=8080 \
                -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
                -e EUREKA_INSTANCE_HOSTNAME=api-gateway \
                -e EUREKA_INSTANCE_PREFER_IP_ADDRESS=false \
                -e MANAGEMENT_HEALTH_VALIDATE_GROUP_MEMBERSHIP=false \
                -e SPRING_CLOUD_CONFIG_ENABLED=false \
                -e SPRING_SECURITY_BASIC_ENABLED=false \
                -e MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info \
                -e MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always \
                -e SPRING_APPLICATION_NAME=api-gateway \
                -e GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcp-credentials.json \
                -e REDIS_HOST=redis \
                -e REDIS_PORT=6379 \
                -e REDIS_PASSWORD=13579ada \
                ${DOCKERHUB_USERNAME}/api-gateway:latest-arm64
            fi

            # Health check
            echo "=== Waiting for ${{ matrix.service.name }} ==="
            sleep 30

            for i in {1..5}; do
              echo "Health check attempt $i/5..."
              if curl -sf http://localhost:${{ matrix.service.port }}/actuator/health; then
                echo "${{ matrix.service.name }} is healthy"
                exit 0
              fi
              sleep 10
            done

            echo "${{ matrix.service.name }} failed health check"
            docker logs ${{ matrix.service.name }}
            exit 1

  deploy-data-services:
    needs: deploy-core-services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: "redis-service", port: 8079 },
            { name: "kafka-service", port: 9093 },
            { name: "user-service", port: 8060 },
          ]
    steps:
      - name: Deploy ${{ matrix.service.name }}
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,EUREKA_PASSWORD,REDIS_PASSWORD,GCP_SA_KEY
          script: |
            # Setup GCP credentials if needed
            if [ ! -f "/opt/craftpilot/gcp-credentials.json" ]; then
              mkdir -p /opt/craftpilot
              echo "${GCP_SA_KEY}" > /opt/craftpilot/gcp-credentials.json
              chmod 600 /opt/craftpilot/gcp-credentials.json
            fi

            # Deploy service
            docker pull ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64
            docker stop ${{ matrix.service.name }} || true
            docker rm ${{ matrix.service.name }} || true

            docker run -d \
              --name ${{ matrix.service.name }} \
              --network craftpilot-network \
              -p ${{ matrix.service.port }}:${{ matrix.service.port }} \
              -v /opt/craftpilot/gcp-credentials.json:/app/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:${EUREKA_PASSWORD}@eureka-server:8761/eureka/ \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=${REDIS_PASSWORD} \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json \
              ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64

            # Health check
            for i in {1..5}; do
              if curl -sf http://localhost:${{ matrix.service.port }}/actuator/health; then
                echo "${{ matrix.service.name }} is healthy"
                exit 0
              fi
              sleep 10
            done

            echo "${{ matrix.service.name }} failed health check"
            docker logs ${{ matrix.service.name }}
            exit 1

  deploy-business-services:
    needs: deploy-data-services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: "credit-service", port: 8058 },
            { name: "subscription-service", port: 8052 },
            { name: "llm-service", port: 8062 },
            { name: "image-service", port: 8056 },
          ]
    steps:
      - name: Deploy ${{ matrix.service.name }}
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,EUREKA_PASSWORD,REDIS_PASSWORD,GCP_SA_KEY
          script: |
            # Setup GCP credentials if needed
            if [ ! -f "/opt/craftpilot/gcp-credentials.json" ]; then
              mkdir -p /opt/craftpilot
              echo "${GCP_SA_KEY}" > /opt/craftpilot/gcp-credentials.json
              chmod 600 /opt/craftpilot/gcp-credentials.json
            fi

            # Deploy service
            docker pull ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64
            docker stop ${{ matrix.service.name }} || true
            docker rm ${{ matrix.service.name }} || true

            docker run -d \
              --name ${{ matrix.service.name }} \
              --network craftpilot-network \
              -p ${{ matrix.service.port }}:${{ matrix.service.port }} \
              -v /opt/craftpilot/gcp-credentials.json:/app/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:${EUREKA_PASSWORD}@eureka-server:8761/eureka/ \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=${REDIS_PASSWORD} \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json \
              ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64

            # Health check
            for i in {1..5}; do
              if curl -sf http://localhost:${{ matrix.service.port }}/actuator/health; then
                echo "${{ matrix.service.name }} is healthy"
                exit 0
              fi
              sleep 10
            done

            echo "${{ matrix.service.name }} failed health check"
            docker logs ${{ matrix.service.name }}
            exit 1

  deploy-auxiliary-services:
    needs: deploy-business-services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: "notification-service", port: 8053 },
            { name: "analytics-service", port: 8064 },
            { name: "admin-service", port: 8063 },
          ]
    steps:
      - name: Deploy ${{ matrix.service.name }}
        uses: appleboy/ssh-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKERHUB_USERNAME,EUREKA_PASSWORD,REDIS_PASSWORD,GCP_SA_KEY
          script: |
            # Setup GCP credentials if needed
            if [ ! -f "/opt/craftpilot/gcp-credentials.json" ]; then
              mkdir -p /opt/craftpilot
              echo "${GCP_SA_KEY}" > /opt/craftpilot/gcp-credentials.json
              chmod 600 /opt/craftpilot/gcp-credentials.json
            fi

            # Deploy service
            docker pull ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64
            docker stop ${{ matrix.service.name }} || true
            docker rm ${{ matrix.service.name }} || true

            docker run -d \
              --name ${{ matrix.service.name }} \
              --network craftpilot-network \
              -p ${{ matrix.service.port }}:${{ matrix.service.port }} \
              -v /opt/craftpilot/gcp-credentials.json:/app/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:${EUREKA_PASSWORD}@eureka-server:8761/eureka/ \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=${REDIS_PASSWORD} \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json \
              ${DOCKERHUB_USERNAME}/${{ matrix.service.name }}:latest-arm64

            # Health check
            for i in {1..5}; do
              if curl -sf http://localhost:${{ matrix.service.port }}/actuator/health; then
                echo "${{ matrix.service.name }} is healthy"
                exit 0
              fi
              sleep 10
            done

            echo "${{ matrix.service.name }} failed health check"
            docker logs ${{ matrix.service.name }}
            exit 1

  deploy-monitoring:
    needs: deploy-auxiliary-services
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Monitoring Stack
        uses: appleboy/ssh-action@master
        env:
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GRAFANA_ADMIN_PASSWORD
          script: |
            # Deploy Prometheus
            docker pull prom/prometheus:v2.49.1
            docker stop prometheus || true
            docker rm prometheus || true

            docker run -d \
              --name prometheus \
              --network craftpilot-network \
              -p 9090:9090 \
              prom/prometheus:v2.49.1

            # Deploy Grafana
            docker pull grafana/grafana:10.3.1
            docker stop grafana || true
            docker rm grafana || true

            docker run -d \
              --name grafana \
              --network craftpilot-network \
              -p 3000:3000 \
              -e GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD} \
              grafana/grafana:10.3.1

  verify-deployment:
    needs: [deploy-monitoring]
    runs-on: ubuntu-latest
    steps:
      - name: Verify All Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Verifying all services..."

            # Check infrastructure
            docker ps | grep redis
            docker ps | grep zookeeper
            docker ps | grep kafka

            # Check core services
            curl -sf http://localhost:8761/actuator/health
            curl -sf http://localhost:8080/actuator/health

            # Check all services
            docker ps --format "{{.Names}}" | while read container; do
              echo "Checking $container..."
              docker logs --tail 10 $container
            done
