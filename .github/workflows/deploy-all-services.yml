name: Deploy All Services

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deploy-services]

jobs:
  deploy-services:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Infrastructure setup
            echo "=== Setting up infrastructure ==="
            docker network create craftpilot-network || true

            # Redis setup
            if ! docker ps | grep -q redis; then
              docker run -d \
                --name redis \
                --network craftpilot-network \
                -p 6379:6379 \
                -e REDIS_PASSWORD=13579ada \
                redis:latest --requirepass 13579ada
            fi

            # Function for health checking
            check_service() {
              local service_name=$1
              local port=$2
              local startup_message=$3
              local max_attempts=6
              local counter=0

              echo "=== Deploying $service_name ==="
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$service_name:latest-arm64
              docker stop $service_name || true
              docker rm $service_name || true

              # Run the service (pass all arguments after the third one as docker run arguments)
              docker run -d \
                --name $service_name \
                --hostname $service_name \
                --network craftpilot-network \
                --restart unless-stopped \
                "${@:4}"

              echo "=== Waiting for initial startup of $service_name ==="
              sleep 20

              echo "=== Performing health checks for $service_name ==="
              while [ $counter -lt $max_attempts ]; do
                echo "Health check attempt $((counter + 1))/$max_attempts"
                
                if docker ps --format '{{.Status}}' -f name=$service_name | grep -q "Up" && \
                   docker logs $service_name 2>&1 | grep -q "$startup_message" && \
                   docker logs $service_name 2>&1 | grep -q "DiscoveryClient.*registration status: 204"; then
                  
                  echo "âœ“ $service_name is running and registered with Eureka"
                  echo "=== $service_name deployment completed successfully ==="
                  return 0
                fi
                
                echo "Waiting for next check..."
                sleep 10
                counter=$((counter + 1))
              done

              echo "=== Health Check Failed for $service_name - Debug Information ==="
              echo "Docker Status:"
              docker ps -a | grep $service_name
              echo "Container Logs:"
              docker logs $service_name --tail 100
              return 1
            }

            # Deploy Eureka Server
            check_service "eureka-server" "8761" "Started EurekaServerApplication" \
              -p 8761:8761 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SERVER_PORT=8761 \
              -e EUREKA_CLIENT_REGISTER_WITH_EUREKA=false \
              -e EUREKA_CLIENT_FETCH_REGISTRY=false \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/ \
              -e EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false \
              -e SPRING_SECURITY_USER_NAME=craftpilot \
              -e SPRING_SECURITY_USER_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/eureka-server:latest-arm64 || exit 1

            # Deploy Chat Service
            check_service "chat-service" "8081" "Started ChatServiceApplication" \
              -p 8081:8081 \
              -v /opt/craftpilot/gcp-credentials.json:/app/config/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SERVER_PORT=8081 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e EUREKA_INSTANCE_HOSTNAME=chat-service \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcp-credentials.json \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/chat-service:latest-arm64 || exit 1

            # Deploy AI Service
            check_service "ai-service" "8082" "Started AiServiceApplication" \
              -p 8082:8082 \
              -v /opt/craftpilot/gcp-credentials.json:/app/config/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SERVER_PORT=8082 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e EUREKA_INSTANCE_HOSTNAME=ai-service \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcp-credentials.json \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=13579ada \
              ${{ secrets.DOCKERHUB_USERNAME }}/ai-service:latest-arm64 || exit 1

            echo "=== All services deployed successfully ==="
