name: LLM Service CI/CD

on:
  push:
    branches: [master]
    paths:
      - "llm-service/**"
      - ".github/workflows/llm-service-ci-cd.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Grant execute permission for mvnw
        run: |
          cd llm-service
          chmod +x mvnw

      - name: Build
        run: |
          cd llm-service
          ./mvnw clean package -DskipTests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./llm-service
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:latest-arm64

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |

            # Deploy LLM Service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:latest-arm64
            docker stop llm-service || true
            docker rm llm-service || true

            docker run -d \
              --name llm-service \
              --network craftpilot-network \
              --restart unless-stopped \
              -p 8062:8062 \
              -v /opt/craftpilot/gcp-credentials.json:/gcp-credentials.json:ro \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/ \
              -e GOOGLE_APPLICATION_CREDENTIALS=/gcp-credentials.json \
              -e SPRING_SECURITY_USER_NAME=craftpilot \
              -e SPRING_SECURITY_USER_PASSWORD=13579ada \
              -e SPRING_REDIS_HOST=redis \
              -e SPRING_REDIS_PORT=6379 \
              -e SPRING_REDIS_PASSWORD=13579ada \
              -e MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true \
              -e MANAGEMENT_HEALTH_LIVENESSSTATE_ENABLED=true \
              -e MANAGEMENT_HEALTH_READINESSSTATE_ENABLED=true \
              -e SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
              -e SPRING_KAFKA_CONSUMER_GROUP_ID=llm-service-group \
              -e SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest \
              ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:latest-arm64

            # Wait for infrastructure to be ready
            echo "Waiting for infrastructure services..."
            sleep 30

            # Health check with more detailed output
            echo "Starting health checks..."
            for i in {1..30}; do
              echo "Attempt $i: Checking service health..."
              
              HEALTH_STATUS=$(curl -s http://localhost:8062/actuator/health/liveness || echo "Failed to connect")
              echo "Health status: $HEALTH_STATUS"
              
              if echo "$HEALTH_STATUS" | grep -q "UP"; then
                echo "Service is healthy!"
                exit 0
              fi
              
              if [ $((i % 5)) -eq 0 ]; then
                echo "Container logs at attempt $i:"
                docker logs llm-service --tail 50
              fi
              
              sleep 10
            done

            echo "Service failed to become healthy within timeout"
            echo "Final container logs:"
            docker logs llm-service
            exit 1
