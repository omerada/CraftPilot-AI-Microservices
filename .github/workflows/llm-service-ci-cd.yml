name: LLM Service CI/CD

on:
  push:
    branches: [master]
    paths:
      - "llm-service/**"
      - ".github/workflows/llm-service-ci-cd.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./llm-service
    steps:
      - uses: actions/checkout@v3

      # QEMU kurulumu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      # Docker Buildx kurulumu
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm64

      # Docker Hub'a giriş yap
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      # Sadece ARM64 için build ve push
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./llm-service
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:latest-arm64
            ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:${{ github.sha }}-arm64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/llm-service:buildcache-arm64
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/llm-service:buildcache-arm64,mode=max

      # Google Cloud kimlik doğrulaması
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Google Cloud CLI kurulumu
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Docker compose dosyasını oluştur
            cat > docker-compose.yml <<EOF
            version: "3.8"

            networks:
              craftpilot-network:
                external: true

            services:
              llm-service:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/llm-service:latest-arm64
                container_name: llm-service
                networks:
                  - craftpilot-network
                ports:
                  - "8062:8062"
                environment:
                  - SPRING_PROFILES_ACTIVE=prod
                  - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://craftpilot:13579ada@eureka-server:8761/eureka/
                  - EUREKA_INSTANCE_PREFERIPADDRESS=true
                  - SPRING_CLOUD_DISCOVERY_ENABLED=true
                  - SPRING_CLOUD_LOADBALANCER_RIBBON_ENABLED=false
                  - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-service:9092
                  - SPRING_REDIS_HOST=redis
                  - SPRING_REDIS_PORT=6379
                volumes:
                  - /opt/craftpilot/gcp-credentials.json:/gcp-credentials.json:ro
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:8062/actuator/health/liveness"]
                  interval: 10s
                  timeout: 5s
                  retries: 3
                  start_period: 40s
                depends_on:
                  eureka-server:
                    condition: service_healthy
                  kafka-service:
                    condition: service_healthy
                  redis:
                    condition: service_healthy
            EOF

            # Servisi yeniden başlat
            docker-compose pull llm-service
            docker-compose up -d llm-service

            # Health check
            echo "=== Waiting for Service Health Check ==="
            for i in {1..12}; do
              if curl -s http://localhost:8062/actuator/health/liveness | grep -q '"status":"UP"'; then
                echo "Service is healthy"
                exit 0
              fi
              echo "Waiting for service to start... Attempt $i"
              sleep 10
            done

            echo "Service failed health check"
            docker-compose logs llm-service
            exit 1

      - name: Trigger Deploy Services Workflow
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: trigger-deploy-services
