spring:
  application:
    name: user-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
    include: kafka-base
  autoconfigure:
    exclude: org.redisson.spring.starter.RedissonAutoConfiguration
  main:
    allow-bean-definition-overriding: true
  firebase:
    config:
      path: ${FIREBASE_CONFIG_PATH:/etc/gcp/credentials/gcp-credentials.json}

eureka:
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${server.port}
    metadata-map:
      user.name: ${eureka.client.security.user.name:craftpilot}
      user.password: ${eureka.client.security.user.password:13579ada}
  client:
    serviceUrl:
      defaultZone: http://${eureka.client.security.user.name:craftpilot}:${eureka.client.security.user.password:13579ada}@${EUREKA_HOST:eureka-server}:${EUREKA_PORT:8761}/eureka/
    register-with-eureka: ${EUREKA_REGISTER:true}
    fetch-registry: ${EUREKA_FETCH:true}
    enabled: ${EUREKA_ENABLED:true}
    healthcheck:
      enabled: true
    refresh:
      enable: true
    shouldDisableDelta: true
    registry-fetch-interval-seconds: 30
    security:
      user:
        name: ${EUREKA_USERNAME:craftpilot}
        password: ${EUREKA_PASSWORD:13579ada}

server:
  port: ${SERVER_PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: diskSpace,redis
          show-details: always
        liveness:
          include: ping
          show-details: always
  health:
    redis:
      enabled: true
    livenessState:
      enabled: true
    readinessState:
      enabled: true
    diskspace:
      enabled: true
    circuitbreakers:
      enabled: true
    kafka:
      enabled: false
    validate-group-membership: false

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

resilience4j:
  circuitbreaker:
    instances:
      userPreferences:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
        allowHealthIndicatorToFail: true
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      userPreferences:
        maxAttempts: 2
        waitDuration: 500ms
  timelimiter:
    instances:
      userPreferences:
        timeoutDuration: 3s
        cancelRunningFuture: true

kafka:
  topics:
    user-preferences: user-preferences
    user-events: user-events
    user-activity: user-activity

logging:
  level:
    root: INFO
    com.craftpilot: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.boot.actuate: DEBUG
    org.springframework.web: INFO
    io.lettuce: DEBUG

craftpilot:
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:13579ada}
    database: 0
    connect-timeout: 3000
    timeout: 3000
    cache-ttl-hours: 1
    pool-max-active: 16
    pool-max-idle: 8
    pool-min-idle: 4
    pool-max-wait: 1000ms
    circuit-breaker-enabled: true
    circuit-breaker-failure-rate-threshold: 50.0
    circuit-breaker-wait-duration-in-open-state: 30s
    circuit-breaker-permitted-calls-in-half-open-state: 3
    retry-enabled: true
    max-retry-attempts: 2
    retry-wait-duration: 500ms
    health-indicator-enabled: true
