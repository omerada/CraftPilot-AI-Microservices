{"@timestamp":"2025-02-03T00:23:28.1417334+03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:28.6298218+03:00","@version":"1","message":"Starting UserServiceApplication using Java 23.0.1 with PID 19052 (C:\\Projects\\Craft-Pilot-Ai\\user-service\\target\\classes started by Omer in C:\\Projects\\Craft-Pilot-Ai\\user-service)","logger_name":"com.craftpilot.userservice.UserServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:28.6363969+03:00","@version":"1","message":"Running with Spring Boot v3.3.1, Spring v6.1.10","logger_name":"com.craftpilot.userservice.UserServiceApplication","thread_name":"main","level":"DEBUG","level_value":10000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:28.6431106+03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.craftpilot.userservice.UserServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:35.5816532+03:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:35.5973639+03:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:35.7281224+03:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:37.43079+03:00","@version":"1","message":"BeanFactory id=ce7191c7-f78f-3546-b1c8-a61fbf09025d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:38.3589741+03:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:38.3813963+03:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:38.3911747+03:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:38.397554+03:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:38.4147947+03:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.0017458+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.0043389+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.0063398+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.0089167+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.2541412+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.prometheus.PrometheusMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.2623267+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.prometheus.PrometheusMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.269524+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.prometheus.PrometheusMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:46.2719793+03:00","@version":"1","message":"A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.","logger_name":"io.micrometer.prometheus.PrometheusMeterRegistry","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:50.0406191+03:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:51.2125886+03:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:51.5736038+03:00","@version":"1","message":"Exposing 5 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:51.7019716+03:00","@version":"1","message":"\r\n\r\nUsing generated security password: c3964765-97ae-42d5-ac61-c6aef23aea72\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:53.1501578+03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'googleCredentials' defined in class path resource [com/google/cloud/spring/autoconfigure/core/GcpContextAutoConfiguration.class]: Failed to instantiate [com.google.api.gax.core.CredentialsProvider]: Factory method 'googleCredentials' threw exception with message: ReactiveWebContext resource [/app/config/firebase-service-account.json] cannot be opened because it does not exist","logger_name":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:53.4139165+03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"app":"user-service","environment":"local"}
{"@timestamp":"2025-02-03T00:23:53.4671784+03:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'googleCredentials' defined in class path resource [com/google/cloud/spring/autoconfigure/core/GcpContextAutoConfiguration.class]: Failed to instantiate [com.google.api.gax.core.CredentialsProvider]: Factory method 'googleCredentials' threw exception with message: ReactiveWebContext resource [/app/config/firebase-service-account.json] cannot be opened because it does not exist\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:335)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)\r\n\tat com.craftpilot.userservice.UserServiceApplication.main(UserServiceApplication.java:14)\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.google.api.gax.core.CredentialsProvider]: Factory method 'googleCredentials' threw exception with message: ReactiveWebContext resource [/app/config/firebase-service-account.json] cannot be opened because it does not exist\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)\r\n\t... 19 common frames omitted\r\nCaused by: java.io.FileNotFoundException: ReactiveWebContext resource [/app/config/firebase-service-account.json] cannot be opened because it does not exist\r\n\tat org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResource.getInputStream(FilteredReactiveWebContextResource.java:63)\r\n\tat com.google.cloud.spring.core.DefaultCredentialsProvider.<init>(DefaultCredentialsProvider.java:88)\r\n\tat com.google.cloud.spring.autoconfigure.core.GcpContextAutoConfiguration.googleCredentials(GcpContextAutoConfiguration.java:56)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)\r\n\t... 20 common frames omitted\r\n","app":"user-service","environment":"local"}
