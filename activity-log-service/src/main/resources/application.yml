server:
  port: 8095
  compression:
    enabled: true
    mime-types: application/json,text/plain
    min-response-size: 1024
  shutdown: graceful

spring:
  application:
    name: activity-log-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}
    include: kafka-base
  cloud:
    gcp:
      project-id: ${SPRING_CLOUD_GCP_PROJECT_ID:craft-pilot-ai}
      credentials:
        location: file:${GOOGLE_APPLICATION_CREDENTIALS:/app/credentials/gcp-credentials.json}
      firestore:
        enabled: true
        project-id: ${SPRING_CLOUD_GCP_PROJECT_ID:craft-pilot-ai}
        emulator:
          enabled: ${FIRESTORE_EMULATOR_ENABLED:false}
          host: ${FIRESTORE_EMULATOR_HOST:localhost:8081}
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: activity-log-service
      auto-offset-reset: latest
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.craftpilot.commons.activity.model,com.craftpilot.activitylogservice.model
        spring.json.value.default.type: com.craftpilot.commons.activity.model.ActivityEvent
        spring.json.use.type.headers: false

# Redis yapılandırması ekleniyor
spring.data.redis:
  host: ${REDIS_HOST:redis}
  port: ${REDIS_PORT:6379}
  password: ${REDIS_PASSWORD:CHANGE_ME_IN_PRODUCTION}
  timeout: 5000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.craftpilot: DEBUG
    org.springframework.web: INFO
    org.springframework.kafka: INFO
    com.google.cloud.firestore: INFO
    com.craftpilot.activitylogservice: INFO
    org.apache.kafka: WARN

kafka:
  topics:
    user-activity: user-activity
  consumer:
    group-id: ${spring.application.name}-group
    concurrency: 3
    auto-offset-reset: earliest
    max-poll-records: 100

pagination:
  default-page-size: 20
  max-page-size: 100

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://craftpilot:CHANGE_ME_IN_PRODUCTION@eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:activity-log-service}
    lease-renewal-interval-in-seconds: 10
    health-check-url-path: /actuator/health
    status-page-url-path: /actuator/info
    home-page-url: http://${eureka.instance.hostname}:${server.port}/
    instance-id: ${spring.application.name}:${server.port}:${random.uuid}
    metadata-map:
      management:
        context-path: /actuator

activity:
  kafka:
    consumer:
      topic: user-activity
    retry:
      max-attempts: 3
      initial-backoff: 1000
